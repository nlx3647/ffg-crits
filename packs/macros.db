{"_id":"YBVC4kGhJolkxgtb","name":"Critical Roll","type":"script","author":"RCSuciFRArKAQeu6","img":"icons/svg/dice-target.svg","scope":"global","command":"//Make sure the critical tables are set up first: https://github.com/StarWarsFoundryVTT/StarWarsFFG/wiki/Creating-Critical-Tables\nconst tables = game.tables.map(table => {\n    if (table.data.name.includes(\"Critical\")) {\n        if (actor != null && ((token.actor.data.type === \"vehicle\" && table.data.name === \"Critical Damage\") || (token.actor.data.type === \"character\" && table.data.name === \"Critical Injuries\"))) {\n            return `<option value=\"${table.data._id}\" selected>${table.data.name}</option>`;\n        } else {\n            return `<option value=\"${table.data._id}\">${table.data.name}</option>`;\n        }\n    }\n})\n\nvar modifier = 0;\nvar durableRank = 0;\n\n//See if an actor is selected\nif (actor) {\n    if (token.actor.data.token.actorLink) {\n        //Make sure we reference the real actor and not a copy of it\n        var realActor = game.actors.get(actor.id);\n        //Count the number of injuries the character already has\n        modifier = realActor.items.filter(item => item.data.type === \"criticalinjury\" || item.data.type === \"criticaldamage\").length * 10;\n        //check to see if the character has the Durable talent\n        var durableTalent = realActor.items.filter(item => item.data.name.toLowerCase() === \"durable\");\n        //If the talent is found multiply it by 10 for the roll\n        if (durableTalent.length > 0) {\n            durableRank = durableTalent[0].data.data.ranks.current * 10;\n        }\n\n    } else {\n        var realActor = token.actor;\n        //Count the number of injuries the token already has\n        modifier = token.actor.items.filter(item => item.data.type === \"criticalinjury\" || item.data.type === \"criticaldamage\").length * 10;\n        //check to see if the token has the Durable talent\n        var durableTalent = token.actor.items.filter(item => item.data.name.toLowerCase() === \"durable\");\n        //If the talent is found multiply it by 10 for the roll\n        if (durableTalent.length > 0) {\n            durableRank = durableTalent[0].data.data.ranks.current * 10;\n        }\n    }\n}\n\nlet d = new Dialog({\n    title: \"Critical Roll\",\n    content: `<p>Select table and modifier</p>\n    <div class=\"grid grid-3col\">\n      <div>Modifier: \n        <input name=\"modifier\" class=\"modifier\" style=\"width:50%\" type=\"text\" placeholder=\"` + modifier + `\" value=\"` + modifier + `\" data-dtype=\"String\" />\n      </div>\n      <div>Durable: ` + durableRank + `\n      </div>\n      <div>\n        Table: <select class=\"crittable\">${tables.join(\"\")}</select>\n      </div>\n    </div>`,\n    buttons: {\n        one: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"Roll Critical\",\n            callback: (html) => {\n                let modifier;\n                modifier = parseInt(html.find(\".modifier\").val(), 10);\n                if (isNaN(modifier)) {\n                    modifier = 0;\n                }\n                const table = html.find(\".crittable :selected\").val();\n                //Added in the Durable modifications as well as making sure it doesn't roll below 1\n                const critRoll = new Roll(`max(1d100 + ${modifier} - ${durableRank}, 1)`);\n                const tableResult = game.tables.get(table).draw({\n                    roll: critRoll,\n                    displayChat: true\n                });\n                //If we have an actor selected try to add the injury\n                if (realActor) {\n                    //Table roles are async so wait for it to return\n                    tableResult.then(function (value) {\n                        //Ignore if we didn't draw a result\n                        if (value.results.length <= 0) {\n                            return;\n                        }\n\n                        var firstResult = value.results[0];\n                        var item = game.items.get(firstResult.data.resultId);\n                        if (item != null) {\n                            //Add injury to the selected chracter\n                            realActor.createEmbeddedDocuments(\"Item\", [item.toObject()]);\n                            ChatMessage.create({\n                                speaker: { alias: realActor.name, token: realActor.id },\n                                content: item.data.data.description\n                            })\n                        }\n                    });\n                }\n            }\n        },\n        two: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"Cancel\",\n            callback: () => console.log(\"Chose Two\")\n        }\n    },\n    default: \"two\",\n    close: () => console.log(\"This always is logged no matter which option is chosen\")\n});\nd.render(true);","folder":null,"sort":1600000,"permission":{"default":2,"RCSuciFRArKAQeu6":3},"flags":{}}
